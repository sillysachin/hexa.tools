package fr.lteconsulting.hexa.databinding.test.dto;

import com.google.gwt.core.client.GWT;
import fr.lteconsulting.hexa.classinfo.gwt.ClazzBundle;
import fr.lteconsulting.hexa.classinfo.gwt.ReflectedClasses;
import fr.lteconsulting.hexa.databinding.properties.Properties;
import java.lang.String;

/**
  * Observable class generated from {@link $SourceClassFqn}
  * Generated by HexaBinding
  * Made by LTE Consulting
  */
public final class $TargetClassName extends $SourceClassName
{
	interface ClassBundle extends ClazzBundle
	{
		@ReflectedClasses( classes = { $TargetClassName.class } )
		void register();
	}
	
	static
	{
		GWT.<ClassBundle>create( ClassBundle.class ).register();
	}
	
	$Constructors

	$FieldsAndMethods
}
------
	public $TargetClassName( $FormalParameters )
	{
		super( $Parameters );
	}
------
	public String get$PropertyCap()
	{
		return this.name;
	}
------
	$Modifiers void $MethodName( $PropertyClass $Property )
	{
		super.$MethodName( $Property );
		Properties.notify( this, "$Property" );
	}
------
	$Modifiers void $MethodName( $PropertyClass $Property )
	{
		this.$Property = $Property;
		Properties.notify( this, "$Property" );
	}
